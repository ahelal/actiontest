name: Azure
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths:
        - 'azure/python/**'
  pull_request:
    branches: [ "main" ]
    paths:
        - 'azure/python/**'

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
            python-version: '3.10' 
      - name: Install dependencies
        run: |
          pip install -r azure/python/requirements.txt
      - name: run script
        run: python azure/python/main.py

#   python2:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with:
#             python-version: '3.10' 
#       - name: Install dependencies
#         run: |
#           pip install azure-identity paramiko azure-mgmt-compute
#       - name: run script
#         run: python azure/python/main.py

  bender:
    runs-on: ubuntu-latest
    needs: [python]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      # - name: Read VERSION file
      #   id: getversion
      #   run: echo "::set-output name=version::$(cat VERSION)"
      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: v${{ steps.getversion.outputs.version }}.${{ steps.buildnumber.outputs.build_number }}
      #     prerelease: false
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get dir context
        id: getdir
        run: echo "::set-output name=dir::$(ls -R)"
      - name: test
        run: echo ${{ steps.getdir.outputs.dir }}

      - name: Debug job with bender (if failure)
        uses: ahelal/bender-action@context
        with:
          gh-token: ${{ secrets.GHTOKEN }}
          az-openai-endpoint: ${{vars.AZOPENAIENDPOINT}}
          az-openai-deployment: ${{secrets.AZOPENAIDEPLOYMENT}}
          az-openai-key: ${{secrets.AZOPENAIKEY}}
          dir-context: ${{ steps.getdir.outputs.dir }}
          # az-openai-apiVersion:
          # job-context:
          # user-context: